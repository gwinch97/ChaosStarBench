name: media-frontend

ports:
  - port: 8081
    targetPort: 8080

container:
  image: lewisrye/media-frontend
  imageVersion: xenial
  name: media-frontend
  ports: 
  - containerPort: 8081
  
  env:
  - name: fqdn_suffix
    value: ".{{ .Release.Namespace }}.svc.cluster.local"
  volumeMounts:
    - name: lua-scripts
      mountPath: /usr/local/openresty/nginx/lua-scripts

initContainer:
  image: alpine/git
  imageVersion: latest
  name: alpine-container
  volumeMounts:
  - name: lua-scripts
    mountPath: /lua-scripts
  command: "/bin/sh" 
  args: ["-c", "git clone https://github.com/gwinch97/ChaosStarBench.git /ChaosStarBench &&
            cp -r /ChaosStarBench/socialNetwork/media-frontend/lua-scripts/* /lua-scripts/"]

volumes:
  - name: lua-scripts

configMaps:
  - name: nginx.conf
    mountPath: /usr/local/openresty/nginx/conf/nginx.conf
    value: nginx

  - name: service-config.json
    mountPath: /social-network-microservices/config/service-config.json
    value: service-config

  - name: jaeger-config.yml
    mountPath: /social-network-microservices/config/jaeger-config.yml
    value: jaeger-config

# affinity
affinity:
  nodeAffinity:
    requiredDuringSchedulingIgnoredDuringExecution:
      nodeSelectorTerms:
      - matchExpressions:
        - key: "kubernetes.io/hostname"
          operator: "In"
          values:
          - "minikube"

# tolerations     
tolerations:
- key: "monitoring"
  operator: "Equal"
  value: "enabled"
  effect: "NoSchedule"

jaeger:
  agentHost: "jaeger-agent"
  agentPort: 6831
  samplerType: "const"
  samplerParam: 1
  logSpans: true
  queueSize: 100
  bufferFlushInterval: 10
  disabled: false